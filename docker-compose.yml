version: '3.8'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /etc/nginx/certs:/etc/nginx/certs:rw
      - /etc/nginx/vhost.d:/etc/nginx/vhost.d
      - /usr/share/nginx/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - 'com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true'

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: always
    depends_on:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - ACME_CA_URI=https://acme-staging-v02.api.letsencrypt.org/directory # Use staging server
    volumes:
      - /etc/nginx/certs:/etc/nginx/certs:rw
      - /etc/nginx/vhost.d:/etc/nginx/vhost.d
      - /usr/share/nginx/html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro

  mysql:
    container_name: mysql
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - '3306:3306'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: hrd_conference_backend
    build: .
    restart: always
    env_file:
      - .env
    depends_on:
      - mysql
    expose:
      - '${PORT}' # Used by nginx-proxy internally
    environment:
      - VIRTUAL_HOST=srv819239.hstgr.cloud
      - LETSENCRYPT_HOST=srv819239.hstgr.cloud
      - LETSENCRYPT_EMAIL=helmizaki1997@gmail.com
    labels:
      - 'VIRTUAL_HOST=srv819239.hstgr.cloud'
      - 'LETSENCRYPT_HOST=srv819239.hstgr.cloud'
      - 'LETSENCRYPT_EMAIL=helmizaki1997@gmail.com'
    command: npm run start:prod

volumes:
  mysql_data:
